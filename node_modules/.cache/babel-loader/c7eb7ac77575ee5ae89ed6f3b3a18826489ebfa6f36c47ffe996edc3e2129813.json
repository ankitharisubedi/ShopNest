{"ast":null,"code":"var _jsxFileName = \"/Users/ankitsubedi/react-store/src/contexts/user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener } from \"../utils/firebase/firebase.utils\";\n//as the actual value we want to access\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentScreen: () => null\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unSubscribe = onAuthStateChangedListener(user => {\n      setCurrentUser(user);\n    });\n    return unSubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentScreen","UserProvider","children","_s","setCurrentUser","value","unSubscribe","user","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ankitsubedi/react-store/src/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener } from \"../utils/firebase/firebase.utils\";\n//as the actual value we want to access\nexport const UserContext = createContext ({\n    currentUser:null,\n    setCurrentScreen: () => null,\n\n});\n\nexport const UserProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const  value = { currentUser, setCurrentUser}\n    useEffect(() => {\n        const unSubscribe = onAuthStateChangedListener((user => {\n            setCurrentUser(user);\n        }));\n        return unSubscribe;\n    },[]);\n    return <UserContext.Provider value = {value}>{children}</UserContext.Provider>;\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,0BAA0B,QAAQ,kCAAkC;AAC7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAE;EACtCO,WAAW,EAAC,IAAI;EAChBC,gBAAgB,EAAEA,CAAA,KAAM;AAE5B,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACJ,WAAW,EAAEK,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAOY,KAAK,GAAG;IAAEN,WAAW;IAAEK;EAAc,CAAC;EAC7CV,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAGX,0BAA0B,CAAEY,IAAI,IAAI;MACpDH,cAAc,CAACG,IAAI,CAAC;IACxB,CAAE,CAAC;IACH,OAAOD,WAAW;EACtB,CAAC,EAAC,EAAE,CAAC;EACL,oBAAOT,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACH,KAAK,EAAIA,KAAM;IAAAH,QAAA,EAAEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAClF,CAAC;AAACT,EAAA,CAVWF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}